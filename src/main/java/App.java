import static spark.Spark.staticFileLocation;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import spark.ModelAndView;
import spark.template.velocity.VelocityTemplateEngine;

import static spark.Spark.*;


/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    public static void main(String[] args) {
        staticFileLocation("/public");
        String layout = "templates/layout.vtl";

        ProcessBuilder process = new ProcessBuilder();
        Integer port;
        if (process.environment().get("PORT") != null) {
            port = Integer.parseInt(process.environment().get("PORT"));
        } else {
            port = 4567;
        }

        setPort(port);

        get("/", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            ArrayList<Todo> todos = Todo.getAllTodo();
            model.put("mytodos", todos);
            model.put("template", "templates/index.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        get("/addTodoForm", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            model.put("template", "templates/addTodo.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

            //post: process new post form
            post("/addform", (request, response) -> { //URL to make new post on POST route
            Map<String, Object> model = new HashMap<>();
            String todoItem = request.queryParams("todoItem").toUpperCase();
            //session
            request.session().attribute("todoItem");
            model.put("todoItem", todoItem);

            Todo newTodo = new Todo(todoItem);
            model.put("newTodos", newTodo);
            model.put("template", "templates/success.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

    }
}
